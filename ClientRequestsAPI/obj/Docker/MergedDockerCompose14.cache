name: dockercompose5204650953546653000
services:
  clientrequestsapi:
    build:
      context: E:\ProyectoDockerCompose\ClientRequestsAPI
      dockerfile: ClientRequestsAPI/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
        LAUNCHING_FROM_VS: "true"
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: ClientRequestsAPI
    container_name: ClientRequestsAPI
    depends_on:
      mysql:
        condition: service_started
        required: true
    entrypoint:
      - dotnet
      - --roll-forward
      - Major
      - /VSTools/DistrolessHelper/DistrolessHelper.dll
      - --wait
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
    image: clientrequestsapi
    labels:
      com.microsoft.visual-studio.project-name: ClientRequestsAPI
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/ClientRequestsAPI.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: dotnet --roll-forward Major /VSTools/DistrolessHelper/DistrolessHelper.dll --stop dotnet
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\maxio\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\maxio\AppData\Roaming\ASP.NET\Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\maxio\AppData\Roaming\ASP.NET\Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\maxio\AppData\Roaming\Microsoft\UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\maxio\AppData\Roaming\Microsoft\UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: E:\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\linux-x64\net8.0
        target: /VSTools
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: E:\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  frontend:
    build:
      context: E:\ProyectoDockerCompose\ClientRequestsAPI\frontend
      dockerfile: Dockerfile
    container_name: frontend
    depends_on:
      clientrequestsapi:
        condition: service_started
        required: true
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "5000"
        protocol: tcp
  mysql:
    container_name: mysql-db
    environment:
      MYSQL_DATABASE: client_db
      MYSQL_ROOT_PASSWORD: "12345678"
    image: mysql:8.0
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3306
        published: "3306"
        protocol: tcp
    volumes:
      - type: volume
        source: mysql_data
        target: /var/lib/mysql
        volume: {}
      - type: bind
        source: E:\ProyectoDockerCompose\ClientRequestsAPI\database\init.sql
        target: /docker-entrypoint-initdb.d/init.sql
        bind:
          create_host_path: true
  phpmyadmin:
    container_name: phpmyadmin
    environment:
      MYSQL_ROOT_PASSWORD: "12345678"
      PMA_HOST: mysql-db
      PMA_PORT: "3306"
    image: phpmyadmin:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8081"
        protocol: tcp
networks:
  default:
    name: dockercompose5204650953546653000_default
volumes:
  mysql_data:
    name: dockercompose5204650953546653000_mysql_data